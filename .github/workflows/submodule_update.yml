name: Submodule Auto Sync

on:
  workflow_dispatch:
  schedule:
    - cron: "0 8,18 * * *" # 2 am / 4 pm (shanghai)

jobs:
  check-submodules:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      any_updated: ${{ steps.check.outputs.any_updated }}
      updated_modules: ${{ steps.check.outputs.updated_modules }}
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v5
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Parse .gitmodules
        id: parse
        run: |
          # 提取所有子模块名称
          git config --file .gitmodules --get-regexp 'submodule\..*\.path' | \
          awk '{split($1, a, "."); print a[2]}' | \
          sort -u > submodule_names.txt

          # 输出子模块名称列表
          echo "names=$(cat submodule_names.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Check for updates
        id: check
        run: |
          names=(${{ steps.parse.outputs.names }})
          declare -A before_hashes
          any_updated=false
          updated_modules=""

          # 记录当前哈希
          for name in "${names[@]}"; do
            path=$(git config --file .gitmodules --get submodule.$name.path)
            hash=$(git -C "$path" rev-parse HEAD)
            before_hashes[$name]=$hash
          done

          # 更新所有子模块
          git submodule update --remote --recursive

          # 检查更新并收集有变更的模块名称
          for name in "${names[@]}"; do
            path=$(git config --file .gitmodules --get submodule.$name.path)
            new_hash=$(git -C "$path" rev-parse HEAD)
            updated=$([[ "${before_hashes[$name]}" != "$new_hash" ]] && echo "true" || echo "false")

            if $updated; then
              any_updated=true
              updated_modules+="{{$name}} "
            fi
          done

          echo "any_updated=$any_updated" >> $GITHUB_OUTPUT
          echo "updated_modules=$updated_modules" >> $GITHUB_OUTPUT
          echo "Updated modules: $updated_modules"

  trigger_specific_workflow:
    needs: check-submodules
    # if: needs.check-submodules.outputs.any_updated == 'true'
    if: contains(needs.check-submodules.outputs.updated_modules, '{{open_eng_dict}}')
    permissions:
      contents: write
    uses: ./.github/workflows/eng_dict_build.yml
